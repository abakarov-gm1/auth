version: "3"

services:

  traefik:
    image: traefik:v2.10
    command:
      - "--api.insecure=true"  # Включить API Traefik
      - "--providers.docker=true"  # Включить провайдер Docker
      - "--entrypoints.http.address=:80"  # Настроить точку входа для HTTP
      - "--entrypoints.https.address=:443"  # Настроить точку входа для HTTPS
      - "--certificatesresolvers.myresolver.acme.httpchallenge=true"  # Настройка HTTP-01 challenge
      - "--certificatesresolvers.myresolver.acme.httpchallenge.entrypoint=http"
      - "--certificatesresolvers.myresolver.acme.email=abakarov_gm1@mail.ru"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"  # Хранилище сертификатов
    ports:
      - "8080:8080"  # Порт для панели управления Traefik
      - "80:80"  # Порт для HTTP трафика
      - "443:443"  # Порт для HTTPS трафика
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"  # Подключение Docker сокета
      - "letsencrypt:/letsencrypt"  # Хранилище для сертификатов Let's Encrypt
    networks:
      - dev
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=dev"

  api:
    build:
      context: ./api/docker/nginx
      dockerfile: Dockerfile
    volumes:
      - ./api:/app
    networks:
      - dev
    depends_on:
      - fast-api
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.rule=Host(`api.abakarov`)"
      - "traefik.http.services.api.loadbalancer.server.port=80"
      - "traefik.docker.network=dev"
      - "traefik.http.routers.api.entryPoints=http"
      - "traefik.http.routers.api-secure.entryPoints=https"
      - "traefik.http.routers.api-secure.rule=Host(`api.abakarov.store`)"
      - "traefik.http.routers.api-secure.tls.certresolver=myresolver"

  fast-api:
    build:
      context: ./api
      dockerfile: docker/dev/Dockerfile
#    ports:
#      - "8000:8000"
    volumes:
      - ./api:/app
    networks:
      - dev

  db-postgres:
    image: postgres:14.1-alpine
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: secret
      POSTGRES_DB: user
    volumes:
      - db-volume:/var/lib/postgresql/data
    networks:
      - dev
    ports:
      - "5432:5432"

  redis:
    image: redis:alpine
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - dev

networks:
  dev:

volumes:
  redis_data:
  uploads:
  db-volume:
    driver: local
  letsencrypt:  # Хранилище для сертификатов Let's Encrypt
